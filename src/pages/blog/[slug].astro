---
import Layout from "@/layouts/Layout.astro";
import { sanityClient } from "sanity:client";
import type { SanityDocument } from "@sanity/client";
import { PortableText } from "astro-portabletext";
import { urlFor } from "@/lib/sanity";
import BlockCode from "@/components/BlockCode.astro";
import BlockImage from "@/components/BlockImage.astro";
import AppFooter from "@/components/AppFooter.astro";

export async function getStaticPaths() {
  const POSTS_QUERY = `
  *[_type == "post"] {
    "slug": slug.current,
    _id
  }
  `;

  const posts = await sanityClient.fetch<SanityDocument[]>(POSTS_QUERY);

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { postId: post._id },
  }));
}

const { slug } = Astro.params;
const { postId } = Astro.props;

const POST_QUERY = `
*[_type == "post" && _id == $postId][0] {
  _id,
  title,
  slug,
  body,
  mainImage,
  publishedAt,
  external_link,
  description,
  author -> {
    name,
    image,
    "slug": slug.current
  },
  categories[] -> {
    title
  }
}
`;

const post = await sanityClient.fetch<SanityDocument>(POST_QUERY, { postId });

if (!post) {
  return Astro.redirect("/404");
}

const formatDate = (dateString: string) => {
  return new Date(dateString).toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
};

const imageUrl = post.mainImage ? urlFor(post.mainImage).url() : null;
const ogImageUrl = post.mainImage ? urlFor(post.mainImage).width(960).height(540).url() : null;

console.log(ogImageUrl);

const components = {
  type: {
    code: BlockCode,
    image: BlockImage,
  },
};
---

<Layout 
  title={post.title} 
  description={post.description}
  image={ogImageUrl ?? undefined}
  article={post.publishedAt ? { publishedAt: post.publishedAt } : undefined}
>
  <div class="px-5 lg:px-0 pb-10">
    <!-- Back to blog -->
    <div class="py-5">
      <a href="/blog" class="text-sm cursor-after-effect hidden lg:block"
        >&larr; Back to Blog</a
      >
    </div>

    <!-- Article header -->
    <article class="max-w-4xl">
      <header class="mb-8">
        <h1 class="text-4xl lg:text-5xl mb-4 leading-tight">
          {post.title}
        </h1>

        <div
          class="flex flex-wrap items-center gap-4 text-sm mb-6"
          style="color: var(--color-text-muted)"
        >
          {
            post.publishedAt && (
              <time datetime={post.publishedAt} title={post.publishedAt}>
                {formatDate(post.publishedAt)}
              </time>
            )
          }

          {
            post.author && (
              <div class="flex items-center gap-2">
                {post.author.image && (
                  <img
                    src={urlFor(post.author.image).width(24).height(24).url()}
                    alt={post.author.name}
                    class="w-6 h-6 rounded-full"
                  />
                )}
                <span>by 
                  {post.author.slug ? (
                    <a 
                      href={`/author/${post.author.slug}`}
                      class="cursor-underline-effect"
                      style="color: var(--color-text)"
                    >
                      {post.author.name}
                    </a>
                  ) : (
                    <span>{post.author.name}</span>
                  )}
                </span>
              </div>
            )
          }

          {
            post.categories && post.categories.length > 0 && (
              <div class="flex gap-2">
                {post.categories.map((category: any) => (
                  <span class="px-2 py-1 rounded text-xs" style="background-color: var(--color-accent-bg); color: var(--color-text)">
                    {category.title}
                  </span>
                ))}
              </div>
            )
          }
        </div>

        {
          post.external_link && (
            <div class="mb-6 p-4 rounded-lg bg-blue-50 border border-blue-200 dark:bg-blue-900/40 dark:border-blue-500/20">
              <p class="mb-2" style="color: var(--color-text)">
                This post was originally published externally.
              </p>
              <a
                href={post.external_link}
                target="_blank"
                rel="noopener noreferrer"
                class="font-medium text-sm text-blue-500 cursor-after-effect"
              >
                Read the original article &rarr;
              </a>
            </div>
          )
        }

        {
          imageUrl && (
            <div class="mb-8">
              <img
                src={imageUrl}
                alt={post.title}
                class="w-full h-64 lg:h-96 object-cover rounded-lg"
              />
            </div>
          )
        }
      </header>

      <!-- Article content -->
      <div class="prose prose-lg max-w-none">
        {
          post.body && (
            <PortableText value={post.body} components={components} />
          )
        }
        {
          !post.body && post.description && (
            <p class="leading-relaxed" style="color: var(--color-text-muted)">{post.description}</p>
          )
        }
        {
          !post.body && !post.description && (
            <p class="italic" style="color: var(--color-text-muted)">
              No content available for this post.
            </p>
          )
        }
      </div>
    </article>

    <!-- Navigation footer -->
    <div class="mt-12 pt-8 pb-4" style="border-top: 1px solid var(--color-border)">
      <a href="/blog" class="text-sm cursor-after-effect">&larr; Back to blog</a
      >
    </div>
    <AppFooter />
  </div>
</Layout>
